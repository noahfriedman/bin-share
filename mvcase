#!/bin/sh
# mvcase --- rename files to all upper or lower case
# Author: Noah Friedman <friedman@prep.ai.mit.edu>
# Created: 1993-11-10
# Last modified: 1994-03-13
# Public domain

# Commentary:
# Code:

# Name by which this script was invoked. 
progname=`echo "$0" | sed -e 's/[^\/]*\///g'`

# To prevent hairy quoting and escaping later.
bq='`'
eq="'"

usage="Usage: $progname {options}

Options are:
-D, --debug                  Turn on shell debugging ($bq${bq}set -x$eq$eq).
-h, --help                   You're looking at it.
-l, --lower-case             Rename upper-case files to lower case.
-m, --mv-options   MVOPTS    Options to ${bq}mv$eq program.
-R, --recur                  Rename all subdirectories and files
-u, --upper-case             Rename lower-case files to upper case.
"

# Usage: value=`(set - "$1" "$2"; eval "$get_option_argument")`
#
# Long option syntax is `--foo=bar' or `--foo bar'.  2nd argument ARG
# won't get used if first long option syntax was used. 
# If 3rd argument OPTIONAL is set, then 2nd may be empty without resulting
# in an error (i.e. option argument is optional)
#
# Returns number of positions caller should shift.
# If retval = 3, caller should exit.
get_option_argument='
  {
    option="$1" arg="$2" arg_optional="$3" shift_num=2
    case "$option" in
      --*=* )
        arg=`echo $option | sed -e "s/^[^=]*=//"` 
        shift_num=1
       ;;
    esac
    case "$arg" in
      "" )
        case "$arg_optional" in
          "" )
            case "$option" in 
              --*=* ) option=`echo $option | sed -e "s/=.*//"` ;;
            esac
            echo "$progname: option $bq$option$eq requires argument." 1>&2
            echo "$usage" 1>&2
            exit 3
           ;;
        esac
        exit 1
       ;;  
    esac
    echo "$arg"
    exit $shift_num
  }'

# Some bourne shells don't allow a numeric argument to `shift'.
# Usage: eval "shift_num=n; $shift_n_times"
shift_n_times='
  {
    while : ; do
      case "$shift_num" in 0 | "" ) break ;; esac
      shift_num=`expr $shift_num - 1`
      shift
    done
  }'

# Initialize variables.
# Don't use `unset' since old bourne shells don't have this command.
# Instead, assign them an empty value.
debug=
case=lower
recur=

# Parse command line arguments. 
# Make sure that all wildcarded options are long enough to be unambiguous.
# It's a good idea to document the full long option name in each case.
# Long options which take arguments will need a `*' appended to the
# canonical name to match the value appended after the `=' character. 
while test $# != 0; do
  case "$1" in 
    -D | --debug | --d* )
      debug=t
      shift
     ;;
    -h | --help | --h )
      echo "$usage" 1>&2
      exit 1
     ;;
    -l | --lower-case | --l* )
      case=lower
      shift
     ;;
    -u | --upper-case | --u* )
      case=upper
      shift
     ;;
    -m | --mv-options* | --m* )
      mv_switches=`(set - "$1" "$2"; eval "$get_option_argument")`
      retval=$?
      case $retval in 3 ) exit 1 ;; esac
      eval "shift_num=$retval; $shift_n_times"
     ;;
    -R | --recur | --r* )
      recur=t
      shift
     ;;
    -- )     # Stop option processing
      shift
      break
     ;;
    --*=* )
      arg=`echo $1 | sed -e 's/=.*//'`
      echo "$progname: unknown option $bq$arg$eq" 1>&2
      echo "$usage" 1>&2
      exit 1
     ;;
    -* )
      echo "$progname: unknown option $bq$1$eq" 1>&2
      echo "$usage" 1>&2
      exit 1
     ;;
    * )
      break
     ;;
  esac
done

case "$debug" in t ) set -x ;; esac

case "$case" in
  lower ) conv='y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/' ;;
  upper ) conv='y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/' ;;
esac

case "$recur" in 
  t )
    find ${1+"$@"} -print | sort -r
   ;;
  * )
    for i in ${1+"$@"} ; do 
      echo "$i" 
    done
   ;;
esac \
 | while read file ; do
     dir=`echo "$file" \
          | sed -e 's/\/*$//
                    s/\/[^\/]*$//'`
     base=`echo "$file" \
           | sed -e 's/\/*$//
                     s/.*\///'`
     convbase=`echo "$base" | sed -e "$conv"`

     case "$base" in "$convbase" )
       echo "$progname: $file not renamed" 1>&2
       continue
      ;;
     esac

     case "$base" in "$file" )
       dir=. ;;
     esac

     ${MV-mv} $mv_switches "$file" "$dir/$convbase"
   done

# mvcase ends here
