#!/usr/bin/perl -w

use Socket;
use strict;

sub parse_ip
{
  local $_ = shift;

  return unpack ("N", inet_aton ($_)) if (/^\d+\.\d+\.\d+\.\d+$/);
  return hex ($_) if (/[a-f]|^0x/i);
  return $_;
}

sub main
{
  if (@_ > 1)
    {
      printf "%-15s %10s %11s %-10s %-12s %s\n",
        "IP", "base10u", "base10s", "base16", "base8", "base2";
      my $fmt = "%-15s %10u %11d 0x%08x 0%011o %032b\n";

      for my $arg (@_)
        {
          my $ip = parse_ip ($arg);
          printf $fmt, inet_ntoa (pack ("N", $ip)), $ip, $ip, $ip, $ip, $ip;
        }
    }
  else
    {
      my $ip = parse_ip ($_[0]);

      my $hex = sprintf ("%08x", $ip);
      $hex =~ s/([0-9a-f]{2})/$1 /g;

      my $oct = sprintf ("%011o", $ip);
      $oct =~ s/(\d{3})/$1 /g;

      my $bin = sprintf ("%032b", $ip);
      $bin =~ s/(\d{4})/$1 /g;

      printf "IP:      %s\nbase10u: %u\nbase10s: %d\nbase16:  %s\nbase8:   %s\nbase2:   %s\n",
        inet_ntoa (pack ("N", $ip)), $ip, $ip, $hex, $oct, $bin;
    }
}

main (@ARGV);
