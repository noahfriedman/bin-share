#!/usr/bin/env perl

use strict;
use warnings qw(all);

# Other options that may be worth adding:
#	-msg
#	-debug
#	-explicit_policy
my @opt = (qw(-verify      8
              -auth_level  2
              -status

              -check_ss_sig
              -extended_crl
              -policy_check
              -policy_print
              -x509_strict

              -no_ticket
              -state
              -prexit
              -verify_return_error
            ));

sub main
{
  unless (@_)
    {
      (my $progname = $0) =~ s=^.*/==;
      print STDERR "Usage: $progname {s_client options ...} [hostname:port]\n";
      exit( 1 );
    }

  my $pid = open (my $fh, "-|");
  die "fork: $!\n" unless defined $pid;
  if ($pid) # parent
    {
      local $/ = undef;
      $_ = scalar <$fh>;
      wait;
    }
  else
    {
      my @cmd = qw(openssl s_client);
      my $remote = pop @_;

      (my $hostname = $remote) =~ s/:.*//;
      push @cmd, '-verify_hostname', $hostname;
      push @cmd, @opt, @_, '-connect', $remote;

      open (STDIN,  "<",  "/dev/null");
      open (STDERR, ">&", STDOUT);
      exec (@cmd) or die "exec: $remote: $!\n";
    }

  s/^-+BEGIN CERT.*^-+END CERT\S+-+$//msg;
  print;
}

main (@ARGV);

# eof
