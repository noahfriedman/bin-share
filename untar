#!/bin/sh
# untar --- extract contents of archive files into a single directory
# Author: Noah Friedman <friedman@splode.com>
# Created: 1996-01-15
# Public domain

# Commentary:

# This started out just unpacking tar files, but now supports more formats.

# Code:

tmpdir=untar$$

: ${BZIP2:=bzip2} : ${GZIP:=gzip}   : ${LZIP:=lzip} : ${LZMA:=lzma}
: ${LHA:=lha}     : ${UNZIP:=unzip} : ${_7ZIP:=7z}  : ${XZ:=xz}
: ${AR:=ar}       : ${CAT:=cat}     : ${CPIO:=cpio} : ${RPM2CPIO:=rpm2cpio}
: ${DD:=dd}       : ${GREP:=grep}   : ${TAR:=tar}   : ${XARGS:=xargs}
: ${XORRISO:=xorriso}

pre()
{
    pkgdir=${file##*/}   # strip directory
    pkgdir=${pkgdir%.*}  # strip extension
    case $pkgdir in
        *.tar | *.xtar ) pkgdir=${pkgdir%.*} ;; # strip one more extension
    esac

    if [ -d "$pkgdir" ]; then
        echo "$pkgdir": directory already exists 1>&2
        return 1
    fi

    if [ -d "$tmpdir" ]; then
        echo "$tmpdir": temp directory already exists, and it shouldn\'t 1>&2
        return 1
    fi

    mkdir -p "$tmpdir" || return 1
    cd       "$tmpdir" || return 1

    case $file in
        /* ) : ;;
        *  ) file=../$file ;;
    esac

    return 0
}

post()
{
    nfiles=`ls -1A | wc -l`

    ndir=
    if [ $nfiles -eq 1 ]; then
        ndir=`ls -1A`
    fi

    if   [ $nfiles -gt 1 ] ||
       { [ $nfiles -eq 1 ] && [ ".$ndir" != ".$pkgdir" ]; }
    then
        cd .. &&
        mv "$tmpdir" "$pkgdir"
    elif [ $nfiles -eq 1 ]; then
        mv "$ndir" .. &&
        cd .. &&
        rmdir "$tmpdir"
    else
        echo "$tmpdir: empty directory?" 1>&2
        cd .. && rmdir "$tmpdir"
        return 1
    fi
}

extract()
{
    case $file in
        *.t[ag]z | *.tar.gz | *.tar.[Zz] | *.xtar.gz | *.xtar.[Zz] | *.nif )
            $GZIP -dc "$file" | $TAR -xpvf - ;;

        *.tbz | *.tbz2 | *.tar.bz2 | *.xtar.bz2 | *.tar.bz | *.cbt )
            $BZIP2 -dc "$file" | $TAR -xpvf - ;;

        *.tar.xz | *.txz ) # xz uses LZMA, but isn't compatible with `lzma'
            $XZ -dc "$file" | $TAR -xpvf - ;;

        *.tar.lz | *.tlz ) # lzip uses LZMA, but isn't compatible with `lzma'
            $LZIP -dc "$file" | $TAR -xpvf - ;;

        *.tar.lzma )
            $LZMA -dc "$file" | $TAR -xpvf - ;;

        *.tar | *.xtar | *.ova | *.tar.md5 )
            $TAR -xpvf "$file" ;;

        *.zip | *.cbz | *.fbu | *.jar | *.apk | *.xpi | *.epub )
            $UNZIP -o -d . "$file" ;;

        *.cpio | *.cpio.* )
            catZ "$file" | $CPIO -dimv --no-absolute-filenames ;;

        *.rpm )
            $RPM2CPIO "$file" | $CPIO -dimv --no-absolute-filenames ;;

        *.deb | *.udeb )
            $AR xv "$file"
            for file in control.tar.* data.tar.* ; do
                (pre; extract; post)
                rm -f "$file"
            done ;;

        *.lzh )
            $LHA x "$file" ;;

        *.rar | *.cbr )
            if type unar >/dev/null 2>&1;
            then : ${UNRAR:=unar}
            else : ${UNRAR:=unrar}
            fi
            case $UNRAR in
                *unar  ) $UNRAR -t "$file" ;;
                *unrar ) $UNRAR x "$file" ;;
            esac ;;

        *.a | *.lib )
            $AR t "$file" | sed -ne 's=/[^/]*$==p' |
                xargs --no-run-if-empty mkdir -p
            $AR xv "$file" ;;

        *.7z )
            $_7Z x "$file" ;;

        *.cab )
            #${CABEXTRACT-cabextract} "$file" ;;
            $_7Z x "$file" ;;

        *.msi )
            # ${MSIEXEC-msiexec} /a "$file" /qb TARGETDIR=./$pkgdir ;;
            $_7Z x "$file" ;;

        *.dmg )
            $_7Z x "$file" ;;

        *.pkg ) # mac pkg files
            # pkgutil --expand "$file" .
            basename=${file##*/}
            pkgdir=${basename%.pkg}.app
            $_7Z x -o"$pkgdir" "$file" ;;

        *initramfs*.img | *initrd*.img | *ramdisk.img )
            extract_initrd "$file" ;;

        *.cramfs )
            dest=${file##*/}
            fsck.cramfs -v --extract="${dest%.cramfs}" "$file" ;;

        *.squashfs )
            dest=${file##*/}
            unsquashfs -i -d "${dest%.squashfs}" "$file" ;;

        *.iso )
            $XORRISO -for_backup \
                     -indev "$file" \
                     -osirrox on:auto_chmod_on \
                     -chmod_r u+rw / -- \
                     -extract / .  \
                     -rollback_end
            ;;
    esac
}

extract_initrd()
{
    # Assuming GNU grep's -q because initrd files are a linux thing.
    if $GREP -q 'early_cpio' "$file"; then
        # Skip uncompressed cpu microcode blobs at head of actual archive.
        blocks=`$CPIO -t < "$file" 2>&1 \
                  | sed -ne '/^\([0-9]*\) blocks$/s//\1/p'`
        exp() { $DD bs=1b skip=$blocks status=none if="$1"; }
    else
        exp() { $CAT -- "$1"; }
    fi

    kind=`exp "$file" | file -`
    case $kind in
        *gzip*  ) exp2() { $GZIP  -dc; } ;;
        *bzip2* ) exp2() { $BZIP2 -dc; } ;;
        *XZ*    ) exp2() { $XZ    -dc; } ;;
        *cpio*  ) exp2() { $CAT      ; } ;;
        *       ) echo "$file: unknown file format" 1>&2
                  exit 1 ;;
    esac
    exp "$file" | exp2 | $CPIO -dimv --no-absolute-filenames
}

catZ()
{
    case $1 in
        *.[Zz] ) $GZIP  -dc "$1" ;;
        *.gz   ) $GZIP  -dc "$1" ;;
        *.xz   ) $XZ    -dc "$1" ;;
        *.lz   ) $LZIP  -dc "$1" ;;
        *.bz2  ) $BZIP2 -dc "$1" ;;
        *.lzma ) $LZMA  -dc "$1" ;;
        *      ) $CAT       "$1" ;;
    esac
}

main()
{
  for file in "$@"; do
    (pre; extract; post)
  done
}

main "$@"

# eof
