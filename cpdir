#!/bin/sh
# cpdir --- copy directories preserving time, symlinks, etc.
# Author: Noah Friedman <friedman@prep.ai.mit.edu>
# Created: 1991-08-14
# Last modified: 1994-03-13
# Public domain.

# Commentary:
# Code:

# Name by which this script was invoked. 
progname=`echo "$0" | sed -e 's/[^\/]*\///g'`

# To prevent hairy quoting and escaping later.
bq='`'
eq="'"

usage="Usage: $progname {options} srcdir {srcdir2 ...} dstdir

Options are:
-D, --debug                  Turn on shell debugging ($bq${bq}set -x$eq$eq).
-f, --full-path              Copy entire src directory component.
-h, --help                   You're looking at it.
-v, --verbose                Print filenames as they're copied.

Example: ${progname} /home/fsf/friedman /home/gp
         => /home/fsf/friedman -> /home/gp/friedman

         ${progname} --full-path /home/fsf/friedman /home/gp
         => /home/fsf/friedman -> /home/gp/home/fsf/friedman

"

# Initialize variables.
# Don't use `unset' since old bourne shells don't have this command.
# Instead, assign them an empty value.
debug=
verbose=
fullpath=

# Parse command line arguments. 
# Make sure that all wildcarded options are long enough to be unambiguous.
# It's a good idea to document the full long option name in each case.
# Long options which take arguments will need a `*' appended to the
# canonical name to match the value appended after the `=' character. 
while test $# != 0; do
  case "$1" in 
    -D | --debug | --d* )
      debug=t
      shift
     ;;
    -f | --full-path | --f* )
      fullpath=t
      shift
     ;;
    -h | --help | --h )
      echo "$usage" 1>&2
      exit 1
     ;;
    -v | --verbose | --v* )
      verbose="-v"
      shift
     ;;
    -- )     # Stop option processing
      shift
      break
     ;;
    --*=* )
      arg=`echo $1 | sed -e 's/=.*//'`
      echo "$progname: unknown option $bq$arg$eq" 1>&2
      echo "$usage" 1>&2
      exit 1
     ;;
    -* )
      echo "$progname: unknown option $bq$1$eq" 1>&2
      echo "$usage" 1>&2
      exit 1
     ;;
    * )
      break
     ;;
  esac
done

case "$debug" in t ) set -x ;; esac

_saved_args=
while : ; do
  case $# in 0 | 1 ) break ;; esac
  eval _saved_args$#=\$1
  _saved_args="$_saved_args \"\$_saved_args$#\""
  shift
done

dst=$1
eval '{ eval set fnord $_saved_args; }'
shift

for src in ${1+"$@"} ; do
  case "$fullpath" in
    t )
      srcdir=.
      case "$src" in
        /* )
          srcdir=/
          src=`echo "$src" | sed -e 's/^\/*//'`
         ;;
      esac 
     ;;
    * )
      # sed is more portable than `dirname'
      srcdir=`echo "$src" \
              | sed -e 's/\/*$//
                        s/\/[^\/]*$//'`

      case "$srcdir" in "$src" )
        srcdir=. ;;
      esac

      # same as `basename'
      src=`echo "$src" \
           | sed -e 's/\/*$//
                     s/.*\///'`
     ;;
  esac

  ( cd "$srcdir" && tar -cf - "$src" ) \
   | ( cd "$dst" && tar $verbose -xpf - )

done

# cpdir ends here
