#!/usr/bin/env perl
# cookies-sql2txt --- generate cookies.txt from sqlite index

# Author: Noah Friedman <friedman@splode.com>
# Created: 2009-02-10
# Public domain

# Commentary:

# Firefox 3.0 and later use a SQLite database for storing cookies.
# Other web fetching tools such as wget still use the traditional Netscape
# cookies.txt file.  This program will generate the latter from the former.

# Code:

use strict;
use warnings qw(all);

use DBI;

sub main
{
  my ($cookiedb) = @_;
  unless (defined $cookiedb)
    {
      (my $prog = $0) =~ s=.*/==;
      print STDERR "Usage: $prog [cookies.sqlite]\n";
      return 1;
    }

  my $dbh = DBI->connect ("DBI:SQLite:dbname=$cookiedb") or return 1;

  $dbh->do (q{ pragma busy_timeout = 500 });

  # The schema used to include a column baseDomain, but it was dropped years ago.
  # The ordering below puts all cookies for a given TLD together.
  my $baseDomain = q{ substr( ltrim( host, '.' ),
                              instr( ltrim( host, '.' ),
                              '.' ) +1
                            )
                    };
  my $stm = qq{ SELECT host,
                       CASE WHEN substr( host, 1, 1) == '.'
                            THEN 'TRUE'
                            ELSE 'FALSE'
                       END
                    AS flag,
                       path,
                       isSecure,
                       expiry,
                       name,
                       value

                  FROM moz_cookies

                 WHERE expiry >= ?
                   AND length( host ) > 1

              ORDER BY CASE WHEN instr( $baseDomain, '.')
                            THEN $baseDomain
                            ELSE ltrim( host, '.' )
                       END,
                       host,
                       name,
                       path
             };
  my $sth = $dbh->prepare ($stm) or return 1;
  $sth->execute (time);
  while (my @row = $sth->fetchrow_array)
    {
      print join( "\t", @row ), "\n";
    }
  return 0;
}

exit (main (@ARGV));

# eof
